{
    "docs": [
        {
            "location": "/", 
            "text": "ColorHelper\n\n\nHelpful color tooltip in Sublime Text.\n\n\n\n\nColorHelper\n\n\nColorHelper offers tooltips with color previews of stylesheet colors, provides color translation, and allows the storing and accessing of favorite colors in color palettes.  Most features are optionally configurable. For the most part, these tooltips should show any time the cursor is in a CSS, SCSS, or SASS color.  It should also appear when in HTML style attributes.\n\n\n\n\n\n\nFeatures\n\n\n\n\nUseful tooltip popups that show the previews of selected colors.\n\n\nSupport colors in CSS, SCSS, SASS, and HTML attributes.\n\n\nShow all the colors in a file in a special color palette in the tooltip.\n\n\nAllow saving, accessing, and managing colors in named color palettes all from the tooltip.\n\n\nSelect and insert colors from the color palettes via the tooltip.\n\n\nTranslate an existing color form to a new form the tooltip.  Supports rgb, rgba, hex, hsl, hsla, and colors names.", 
            "title": "About Markdown Popups"
        }, 
        {
            "location": "/#colorhelper", 
            "text": "Helpful color tooltip in Sublime Text.", 
            "title": "ColorHelper"
        }, 
        {
            "location": "/#colorhelper_1", 
            "text": "ColorHelper offers tooltips with color previews of stylesheet colors, provides color translation, and allows the storing and accessing of favorite colors in color palettes.  Most features are optionally configurable. For the most part, these tooltips should show any time the cursor is in a CSS, SCSS, or SASS color.  It should also appear when in HTML style attributes.", 
            "title": "ColorHelper"
        }, 
        {
            "location": "/#features", 
            "text": "Useful tooltip popups that show the previews of selected colors.  Support colors in CSS, SCSS, SASS, and HTML attributes.  Show all the colors in a file in a special color palette in the tooltip.  Allow saving, accessing, and managing colors in named color palettes all from the tooltip.  Select and insert colors from the color palettes via the tooltip.  Translate an existing color form to a new form the tooltip.  Supports rgb, rgba, hex, hsl, hsla, and colors names.", 
            "title": "Features"
        }, 
        {
            "location": "/installation/", 
            "text": "Installation\n\n\nInstalling ColorHelper.\n\n\n\n\nPackage Control\n\n\nThe recommended way to install ColorHelper is via \nPackage Control\n.  Package Control will install the correct branch on your system and keep it up to date.\n\n\n\n\n\n\nEnsure Package Control is installed.  Instructions are found \nhere\n.\n\n\n\n\n\n\nIn Sublime Text, press \nctrl\n + \nshift\n + \np\n (Win, Linux) or \ncmd\n + \nshift\n + \np\n (OSX) to bring up the quick panel.  It will show a list of installable plugins.\n\n\n\n\n\n\nStart typing \nColorHelper\n; when you see it, select it.\n\n\n\n\n\n\nRestart to be sure everything is loaded proper.\n\n\n\n\n\n\nEnjoy!\n\n\n\n\n\n\nGit Cloning\n\n\n\n\nWarning\n\n\nThis is not the recommended way to install ColorHelper for the casual user as it requires the user to know which branch to install, know how to use git, and \nwill not\n get automatically updated.\n\n\nIf you are forking for a pull request, this is the way to go, just replace the official repository with the link for your fork.\n\n\n\n\n\n\n\n\nQuit Sublime Text.\n\n\n\n\n\n\nOpen a terminal:\n\n\ncd /path/to/Sublime Text 3/Packages\ngit clone https://github.com/facelessuser/ColorHelper.git ColorHelper\n\n\n\n\n\n\n\n\n\nRestart Sublime Text.", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#installation", 
            "text": "Installing ColorHelper.", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#package-control", 
            "text": "The recommended way to install ColorHelper is via  Package Control .  Package Control will install the correct branch on your system and keep it up to date.    Ensure Package Control is installed.  Instructions are found  here .    In Sublime Text, press  ctrl  +  shift  +  p  (Win, Linux) or  cmd  +  shift  +  p  (OSX) to bring up the quick panel.  It will show a list of installable plugins.    Start typing  ColorHelper ; when you see it, select it.    Restart to be sure everything is loaded proper.    Enjoy!", 
            "title": "Package Control"
        }, 
        {
            "location": "/installation/#git-cloning", 
            "text": "Warning  This is not the recommended way to install ColorHelper for the casual user as it requires the user to know which branch to install, know how to use git, and  will not  get automatically updated.  If you are forking for a pull request, this is the way to go, just replace the official repository with the link for your fork.     Quit Sublime Text.    Open a terminal:  cd /path/to/Sublime Text 3/Packages\ngit clone https://github.com/facelessuser/ColorHelper.git ColorHelper    Restart Sublime Text.", 
            "title": "Git Cloning"
        }, 
        {
            "location": "/usage/", 
            "text": "User Guide\n\n\nConfiguration and usage of ColorHelper.\n\n\n\n\nGeneral Usage\n\n\nColorHelper is a CSS/SCSS/Sass tooltip.  When the cursor is on a CSS color, the tooltip will appear. When entering a color into a supported file, the color palette panel will be triggered so you can optionally insert a color from a saved palette.  The panel will popup after either: \n#\n, \nrgb(\n, \nrgba(\n, \nhsl(\n or \nhsla(\n.\n\n\nColor Info\n\n\nThe Color Info Panel will show a preview of the color, and other format variations of the color such as: color name, hex, rgb, rgba, hsl, and hsla format; if desired, you can convert the selected color to one of the shown formats by clicking the link to the left.\n\n\n\n\nFrom the color info panel, you can launch a color picker, bookmark colors as a favorite, add/save the current color to a palette of your choice, or open the \nPalette Panel\n to select a pre-saved color from an exiting palette.\n\n\nColor Picker\n\n\nThe internal color picker can be launched from the command palette or from the \nColor Info Panel\n.  When launched it will use the color under the cursor (if available) as its starting color. The internal color picker is contained inside a tooltip.  It has a color map section at the top where different colors can be selected. It shows various valid CSS formats of the colors at the bottom.  And it shows either rgba channels or hlsa channels; a toggle is available to switch between them.\n\n\n\n\nThe color channels are coarse, but can generally allow you to get close to a color that you like.  As you select colors in the channel the selections will shift revealing more selections until the bounds of the color channel are reached.  If you need finer selections, you can click the label to the left and scrollable tooltip with much finer selections will appear so that you can select the best suited value.\n\n\n\n\nIf you would like to pick from a list of CSS color names, you can select the \nCSS color names\n link and a CSS Color Names panel will open:\n\n\n\n\nIf you would like to directly enter a different color, you can select the \nenter new color\n option.  An input panel will be open that can receive a color in the hex form of \n#RRGGBBAA\n where \nRR\n is the red channel, \nGG\n is the green channel, \nBB\n is the blue channel, and \nAA\n is the alpha channel.\n\n\nTo select a color, just click the \n link to the right of the CSS format yu want.\n\n\nAdd Color Panel\n\n\nThe Add Color Panel presents the user with the option of either adding a color to an existing palette or creating a new global or project palette and adding the color to it.\n\n\n\n\nWhen creating a new palette, the user will be presented with a input box to type the name of the palette to create.\n\n\nPalette Panel\n\n\nThe Palette panel will allow you to view the current saved palettes: favorites, saved user palette, and saved project palettes.\n\n\n\n\nThe Favorites palette and user palettes are found in your \nPackages/User/color_helper.palettes\n.  Project palettes are stored in your actual project file; if one does not exist, it will be stored in memory.\n\n\nBy clicking a palette, you will be taken to the \nColor Panel\n to select a color to insert into the current document.  You can also access the \nPalette Delete Panel\n directly.\n\n\nPalette Delete Panel\n\n\nThe Palette Delete Panel allows a user to delete an existing palette.  The only palettes that cannot be deleted is the Favorites palette and the Current Colors palette (if enabled).\n\n\n\n\nTo delete a palette, a user simply clicks a palette and it will be removed.\n\n\nColor Panel\n\n\nThe Color Panel allows you to click a color to insert it at your current color position.\n\n\n\n\nFrom the Color Palette, you can also bring up the \nColor Delete Panel\n.\n\n\nColor Delete Panel\n\n\nThe Color Delete Panel can delete any color from the given palette.  A user simply clicks the color to remove, and it will be removed.\n\n\n\n\nSettings\n\n\nSettings for Color Helper are contained within the \ncolor_helper.sublime-settings\n file.\n\n\nupper_case_hex\n\n\nWhen inserting a color from the tooltip, this setting will determine if hex colors get uppercased or lowercased.\n\n\n    \n// Upper case hex when inserting\n\n    \nupper_case_hex\n:\n \nfalse\n,\n\n\n\n\n\n\nuse_webcolor_names\n\n\nWill determine if a HTML color name will be shown for the currently selected colors. If inserting a web color name, transparency will be removed.\n\n\n    \n// Use webcolor names when value color matches a webcolor name.\n\n    \nuse_webcolor_names\n:\n \ntrue\n,\n\n\n\n\n\n\npreferred_format\n\n\nControls color format that will be inserted into your document when selecting a color from a palette.  This will only affect colors that contain \nno\n transparency.\n\n\n    \n// Preferred format to output color as:\n\n    \n// (none|hex|rgb|hsl)\n\n    \npreferred_format\n:\n \nhex\n,\n\n\n\n\n\n\npreferred_alpha_format\n\n\nControls color format that will be inserted into your document when selecting a color from a palette.  This will only affect colors \nwith\n transparency.\n\n\n    \n// Preferred alpha format to output color as:\n\n    \n// (none|rgba|hsla)\n\n    \npreferred_alpha_format\n:\n \nrgba\n,\n\n\n\n\n\n\nclick_color_box_to_pick\n\n\nThis will make the color preview box in the \nColor Info Panel\n clickable.  When set to \ncolor_picker\n and clicked, it will open the color picker via the \nColorPicker\n plugin (if installed).  When set to \npalette_picker\n and clicked, it will open the \nPalette Panel\n. The respective menu item will not be shown in the \nColor Info Panel\n once relocated to the color preview.\n\n\n    \n// Color picker and palette picker by default\n\n    \n// are accessed by clicking an icon on the color info panel.\n\n    \n// Click access for one of thesecan be moved to the color box\n\n    \n// (visual representation of the color).\n\n    \n// (none|color_picker|palette_picker)\n\n    \nclick_color_box_to_pick\n:\n \nnone\n,\n\n\n\n\n\n\ngraphic_size\n\n\nControls the size of generated graphics.  Graphics in the tooltips look best large as Sublime slightly distorts images, but on small screens, some of the tooltips (especially the internal color picker) may be too large.  \ngraphic_size\n can be used ot control the size of these generated images.  Valid settings are \nsmall\n, \nmedium\n, and \nlarge\n where \nmedium\n is the default.\n\n\n    \n// If the color picker is too big, try playing with this.\n\n    \n// Graphics in tooltips usually look better bigger (especially in Hidpi),\n\n    \n// but that can make the tooltips really big. If they are too big,\n\n    \n// you can play with this setting.  We compromise with medium.\n\n    \n// (small | medium | large)\n\n    \ngraphic_size\n:\n \nmedium\n,\n\n\n\n\n\n\nenable_color_picker\n\n\nEnables the ability to launch the color picker from the tooltip.  By default, the internal color picker will be used.  If you have \n@weslly\ns \nColorPicker\n package installed, you can use \nuse_color_picker_package\n to use it instead of the internal color picker.\n\n\n    \n// Enable color picker option.  Will use native color picker\n\n    \n// unless \nuse_color_picker_package\n is enabled and external\n\n    \n// package is installed.\n\n    \nenable_color_picker\n:\n \ntrue\n,\n\n\n\n\n\n\nuse_hex_color_picker\n\n\nEnables or disables the use of the hex color picker.  When enabled, the color picker has a hex shape as the colors fan out from the white center.  If disabled, the color picker will be a rectangular one that shows the colors by hue and by brightness.\n\n\n    \n// This can be turned off to get a rectangular color picker\n\n    \n// That displays possible options by hue and brightness/luminance.\n\n    \nuse_hex_color_picker\n:\n \ntrue\n,\n\n\n\n\n\n\n\n\nDisabled look\n\n\n\n\n\n\nuse_color_picker_package\n\n\nIf you have \n@weslly\ns \nColorPicker\n package installed, \nuser_color_picker_package\n will cause it to override the default color picker, but only the default color picker supports transparency.\n\n\n    \n// Use https://github.com/weslly/ColorPicker for the color picker if installed.\n\n    \nuse_color_picker_package\n:\n \nfalse\n,\n\n\n\n\n\n\nenable_global_user_palettes\n\n\nEnables showing user palettes (found in \nPackages/User/color_helper.palettes\n) in the \nPalette Panel\n.\n\n\n    \n// Show global palettes in palette panel\n\n    \nenable_global_user_palettes\n:\n \ntrue\n,\n\n\n\n\n\n\nenable_favorite_palette\n\n\nEnables showing the Favorites palette (found in \nPackages/User/color_helper.palettes\n) in the \nPalette Panel\n.\n\n\n    \n// Enable storing favorite colors to the favorite palette\n\n    \nenable_favorite_palette\n:\n \ntrue\n,\n\n\n\n\n\n\nenable_current_file_palette\n\n\nEnables scanning of the current active view buffer for colors and showing them in the Current Colors palette in the \nPalette Panel\n.\n\n\n    \n// Enable showing current file color palette\n\n    \nenable_current_file_palette\n:\n \ntrue\n,\n\n\n\n\n\n\nenable_project_user_palettes\n\n\nEnables showing and storing of user palettes in the project file.  Project palettes will be shown in the \nPalette Panel\n.\n\n\n    \n// Enable project palettes in palette panel (Palettes stored in project file).\n\n    \nenable_project_user_palettes\n:\n \ntrue\n\n\n\n\n\n\nenable_color_conversions\n\n\nEnables showing the color conversion options on the \nColor Info Panel\n.\n\n\n    \n// Enable color conversion options on color info panel\n\n    \nenable_color_conversions\n:\n \ntrue\n,\n\n\n\n\n\n\nsupported_syntax\n\n\nsupported_syntax\n is a list of scope rules that will be scanned when \nenable_current_file_palette\n is enabled.  If a color is found within these scope rules, it will be indexed for the current file and shown in the Current Colors Panel in the \nPalette Panel\n.\n\n\n    \n// File scoping that will be used when indexing colors in an opened or saved file.\n\n    \n// These are the syntaxes which the auto popup tooltip uses to recogize scannable regions.\n\n    \nsupported_syntax\n:\n \n[\n\n        \nmeta.property-value.css -comment -string\n,\n          \n// CSS, CSS in HTML etc. (based on: Sublime Default)\n\n        \nmeta.value.css -comment -string\n,\n                   \n// CSS3, CSS3 in HTML etc. (based on: https://packagecontrol.io/packages/CSS3)\n\n        \nmeta.property-list.css.sass -comment -string\n,\n      \n// Sass and SCSS (based on: https://packagecontrol.io/packages/Syntax%20Highlighting%20for%20Sass)\n\n        \nsass-script-maps -variable.other -comment -string\n,\n \n// Sass and SCSS script maps (based on: https://packagecontrol.io/packages/Syntax%20Highlighting%20for%20Sass)\n\n        \nmeta.tag.inline.any.html string.quoted\n             \n// HTML attributes (based on: Sublime Default)\n\n    \n],", 
            "title": "User Guide"
        }, 
        {
            "location": "/usage/#user-guide", 
            "text": "Configuration and usage of ColorHelper.", 
            "title": "User Guide"
        }, 
        {
            "location": "/usage/#general-usage", 
            "text": "ColorHelper is a CSS/SCSS/Sass tooltip.  When the cursor is on a CSS color, the tooltip will appear. When entering a color into a supported file, the color palette panel will be triggered so you can optionally insert a color from a saved palette.  The panel will popup after either:  # ,  rgb( ,  rgba( ,  hsl(  or  hsla( .", 
            "title": "General Usage"
        }, 
        {
            "location": "/usage/#color-info", 
            "text": "The Color Info Panel will show a preview of the color, and other format variations of the color such as: color name, hex, rgb, rgba, hsl, and hsla format; if desired, you can convert the selected color to one of the shown formats by clicking the link to the left.   From the color info panel, you can launch a color picker, bookmark colors as a favorite, add/save the current color to a palette of your choice, or open the  Palette Panel  to select a pre-saved color from an exiting palette.", 
            "title": "Color Info"
        }, 
        {
            "location": "/usage/#color-picker", 
            "text": "The internal color picker can be launched from the command palette or from the  Color Info Panel .  When launched it will use the color under the cursor (if available) as its starting color. The internal color picker is contained inside a tooltip.  It has a color map section at the top where different colors can be selected. It shows various valid CSS formats of the colors at the bottom.  And it shows either rgba channels or hlsa channels; a toggle is available to switch between them.   The color channels are coarse, but can generally allow you to get close to a color that you like.  As you select colors in the channel the selections will shift revealing more selections until the bounds of the color channel are reached.  If you need finer selections, you can click the label to the left and scrollable tooltip with much finer selections will appear so that you can select the best suited value.   If you would like to pick from a list of CSS color names, you can select the  CSS color names  link and a CSS Color Names panel will open:   If you would like to directly enter a different color, you can select the  enter new color  option.  An input panel will be open that can receive a color in the hex form of  #RRGGBBAA  where  RR  is the red channel,  GG  is the green channel,  BB  is the blue channel, and  AA  is the alpha channel.  To select a color, just click the   link to the right of the CSS format yu want.", 
            "title": "Color Picker"
        }, 
        {
            "location": "/usage/#add-color-panel", 
            "text": "The Add Color Panel presents the user with the option of either adding a color to an existing palette or creating a new global or project palette and adding the color to it.   When creating a new palette, the user will be presented with a input box to type the name of the palette to create.", 
            "title": "Add Color Panel"
        }, 
        {
            "location": "/usage/#palette-panel", 
            "text": "The Palette panel will allow you to view the current saved palettes: favorites, saved user palette, and saved project palettes.   The Favorites palette and user palettes are found in your  Packages/User/color_helper.palettes .  Project palettes are stored in your actual project file; if one does not exist, it will be stored in memory.  By clicking a palette, you will be taken to the  Color Panel  to select a color to insert into the current document.  You can also access the  Palette Delete Panel  directly.", 
            "title": "Palette Panel"
        }, 
        {
            "location": "/usage/#palette-delete-panel", 
            "text": "The Palette Delete Panel allows a user to delete an existing palette.  The only palettes that cannot be deleted is the Favorites palette and the Current Colors palette (if enabled).   To delete a palette, a user simply clicks a palette and it will be removed.", 
            "title": "Palette Delete Panel"
        }, 
        {
            "location": "/usage/#color-panel", 
            "text": "The Color Panel allows you to click a color to insert it at your current color position.   From the Color Palette, you can also bring up the  Color Delete Panel .", 
            "title": "Color Panel"
        }, 
        {
            "location": "/usage/#color-delete-panel", 
            "text": "The Color Delete Panel can delete any color from the given palette.  A user simply clicks the color to remove, and it will be removed.", 
            "title": "Color Delete Panel"
        }, 
        {
            "location": "/usage/#settings", 
            "text": "Settings for Color Helper are contained within the  color_helper.sublime-settings  file.  upper_case_hex  When inserting a color from the tooltip, this setting will determine if hex colors get uppercased or lowercased.       // Upper case hex when inserting \n     upper_case_hex :   false ,   use_webcolor_names  Will determine if a HTML color name will be shown for the currently selected colors. If inserting a web color name, transparency will be removed.       // Use webcolor names when value color matches a webcolor name. \n     use_webcolor_names :   true ,   preferred_format  Controls color format that will be inserted into your document when selecting a color from a palette.  This will only affect colors that contain  no  transparency.       // Preferred format to output color as: \n     // (none|hex|rgb|hsl) \n     preferred_format :   hex ,   preferred_alpha_format  Controls color format that will be inserted into your document when selecting a color from a palette.  This will only affect colors  with  transparency.       // Preferred alpha format to output color as: \n     // (none|rgba|hsla) \n     preferred_alpha_format :   rgba ,   click_color_box_to_pick  This will make the color preview box in the  Color Info Panel  clickable.  When set to  color_picker  and clicked, it will open the color picker via the  ColorPicker  plugin (if installed).  When set to  palette_picker  and clicked, it will open the  Palette Panel . The respective menu item will not be shown in the  Color Info Panel  once relocated to the color preview.       // Color picker and palette picker by default \n     // are accessed by clicking an icon on the color info panel. \n     // Click access for one of thesecan be moved to the color box \n     // (visual representation of the color). \n     // (none|color_picker|palette_picker) \n     click_color_box_to_pick :   none ,   graphic_size  Controls the size of generated graphics.  Graphics in the tooltips look best large as Sublime slightly distorts images, but on small screens, some of the tooltips (especially the internal color picker) may be too large.   graphic_size  can be used ot control the size of these generated images.  Valid settings are  small ,  medium , and  large  where  medium  is the default.       // If the color picker is too big, try playing with this. \n     // Graphics in tooltips usually look better bigger (especially in Hidpi), \n     // but that can make the tooltips really big. If they are too big, \n     // you can play with this setting.  We compromise with medium. \n     // (small | medium | large) \n     graphic_size :   medium ,   enable_color_picker  Enables the ability to launch the color picker from the tooltip.  By default, the internal color picker will be used.  If you have  @weslly s  ColorPicker  package installed, you can use  use_color_picker_package  to use it instead of the internal color picker.       // Enable color picker option.  Will use native color picker \n     // unless  use_color_picker_package  is enabled and external \n     // package is installed. \n     enable_color_picker :   true ,   use_hex_color_picker  Enables or disables the use of the hex color picker.  When enabled, the color picker has a hex shape as the colors fan out from the white center.  If disabled, the color picker will be a rectangular one that shows the colors by hue and by brightness.       // This can be turned off to get a rectangular color picker \n     // That displays possible options by hue and brightness/luminance. \n     use_hex_color_picker :   true ,    Disabled look    use_color_picker_package  If you have  @weslly s  ColorPicker  package installed,  user_color_picker_package  will cause it to override the default color picker, but only the default color picker supports transparency.       // Use https://github.com/weslly/ColorPicker for the color picker if installed. \n     use_color_picker_package :   false ,   enable_global_user_palettes  Enables showing user palettes (found in  Packages/User/color_helper.palettes ) in the  Palette Panel .       // Show global palettes in palette panel \n     enable_global_user_palettes :   true ,   enable_favorite_palette  Enables showing the Favorites palette (found in  Packages/User/color_helper.palettes ) in the  Palette Panel .       // Enable storing favorite colors to the favorite palette \n     enable_favorite_palette :   true ,   enable_current_file_palette  Enables scanning of the current active view buffer for colors and showing them in the Current Colors palette in the  Palette Panel .       // Enable showing current file color palette \n     enable_current_file_palette :   true ,   enable_project_user_palettes  Enables showing and storing of user palettes in the project file.  Project palettes will be shown in the  Palette Panel .       // Enable project palettes in palette panel (Palettes stored in project file). \n     enable_project_user_palettes :   true   enable_color_conversions  Enables showing the color conversion options on the  Color Info Panel .       // Enable color conversion options on color info panel \n     enable_color_conversions :   true ,   supported_syntax  supported_syntax  is a list of scope rules that will be scanned when  enable_current_file_palette  is enabled.  If a color is found within these scope rules, it will be indexed for the current file and shown in the Current Colors Panel in the  Palette Panel .       // File scoping that will be used when indexing colors in an opened or saved file. \n     // These are the syntaxes which the auto popup tooltip uses to recogize scannable regions. \n     supported_syntax :   [ \n         meta.property-value.css -comment -string ,            // CSS, CSS in HTML etc. (based on: Sublime Default) \n         meta.value.css -comment -string ,                     // CSS3, CSS3 in HTML etc. (based on: https://packagecontrol.io/packages/CSS3) \n         meta.property-list.css.sass -comment -string ,        // Sass and SCSS (based on: https://packagecontrol.io/packages/Syntax%20Highlighting%20for%20Sass) \n         sass-script-maps -variable.other -comment -string ,   // Sass and SCSS script maps (based on: https://packagecontrol.io/packages/Syntax%20Highlighting%20for%20Sass) \n         meta.tag.inline.any.html string.quoted               // HTML attributes (based on: Sublime Default) \n     ],", 
            "title": "Settings"
        }, 
        {
            "location": "/contributing/", 
            "text": "Contributing \n Support\n\n\nSteps for contributing and getting support.\n\n\n\n\nOverview\n\n\n\n\n\n\n\n\nSublime Versions\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nST3\n\n\nFully supported and actively maintained.\n\n\n\n\n\n\n\n\nContribution from the community is encouraged and can be done in a variety of ways:\n\n\n\n\nBug reports.\n\n\nReviewing code.\n\n\nCode patches via pull requests.\n\n\nDocumentation improvements via pull requests.\n\n\n\n\nBug Reports\n\n\n\n\n\n\nPlease \nread the documentation\n and \nsearch the issue tracker\n to try to find the answer to your question \nbefore\n posting an issue.\n\n\n\n\n\n\nWhen creating an issue on the repository, please provide as much info as possible:\n\n\n\n\nSublime Text build.\n\n\nOperating system.\n\n\nErrors in console.\n\n\nDetailed description of the problem.\n\n\nExamples for reproducing the error.  You can post pictures, but if specific text or code is required to reproduce the issue, please provide the text in a plain text format for easy copy/paste.\n\n\n\n\nThe more info provided, the greater the chance someone will take the time to answer, implement, or fix the issue.\n\n\n\n\n\n\nBe prepared to answer questions and provide additional information if required.  Issues in which the creator refuses to respond to follow up questions will be marked as stale and closed.\n\n\n\n\n\n\nReviewing Code\n\n\nTake part in reviewing pull requests and/or reviewing direct commits.  Make suggestions to improve the code and discuss solutions to overcome weakness in the algorithm.\n\n\nPull Requests\n\n\nPull requests are welcome, and if you plan on contributing directly to the code, there are a couple of things to be mindful of.\n\n\nContinuous integration tests on are run on all pull requests and commits via Travis CI.  When making a pull request, the tests will automatically be run, and the request must pass to be accepted.  You can (and should) run these tests before pull requesting.  If it is not possible to run these tests locally, they will be run when the pull request is made, but it is strongly suggested that requesters make an effort to verify before requesting to allow for a quick, smooth merge.\n\n\nFeel free to use a virtual environment if you are concerned about installing any of the Python packages.  In the future, I may use tox, but as I currently only test on Python 3.3, I wanted to keep things simple.\n\n\nRunning Validation Tests\n\n\n\n\nTip\n\n\nIf you are running Sublime on a OSX or Linux/Unix system, you run all tests by by running the shell script (assuming you have installed your environment fulfills all requirements below):\n\n\nchmod +x run_tests.sh\n./run_tests.sh\n\n\n\n\n\n\n\nThere are a couple of dependencies that must be present before running the tests.\n\n\n\n\n\n\nAs \nST3\n is the only current, actively supported version, Python 3.3 must be used to validate the tests.\n\n\n\n\n\n\nUnit tests are run with \nnose\n.  You can install nose via:\n\n\npip install nose\n\n\n\n\n\nThe tests should be run from the root folder of the plugin by using the following command:\n\n\nnosetests .\n\n\n\n\n\n\n\n\n\nLinting is performed on the entire project with \nflake8\n, \nflake8_docstrings\n, and \npep8-naming\n.  These can be installed via:\n\n\npip install flake8\npip install flake8_docstrings\npip install pep8-naming\n\n\n\n\n\nLinting is performed with the following command:\n\n\nflake8 .\n\n\n\n\n\n\n\n\n\nDocumentation Improvements\n\n\nA ton of time has been spent not only creating and supporting this plugin, but also spent making this documentation.  If you feel it is still lacking, show your appreciation for the plugin by helping to improve the documentation.  Help with documentation is always appreciated and can be done via pull requests.  There shouldn\nt be any need to run validation tests if only updating documentation.\n\n\nYou don\nt have to render the docs locally before pull requesting, but if you wish to, I currently use a combination of \nmkdocs\n with my own custom Python Markdown \nextensions\n to render the docs.  You can preview the docs if you install these two packages.  The command for previewing the docs is \nmkdocs serve\n from the root directory.", 
            "title": "Contributing &amp; Support"
        }, 
        {
            "location": "/contributing/#contributing-support", 
            "text": "Steps for contributing and getting support.", 
            "title": "Contributing &amp; Support"
        }, 
        {
            "location": "/contributing/#overview", 
            "text": "Sublime Versions  Description      ST3  Fully supported and actively maintained.     Contribution from the community is encouraged and can be done in a variety of ways:   Bug reports.  Reviewing code.  Code patches via pull requests.  Documentation improvements via pull requests.", 
            "title": "Overview"
        }, 
        {
            "location": "/contributing/#bug-reports", 
            "text": "Please  read the documentation  and  search the issue tracker  to try to find the answer to your question  before  posting an issue.    When creating an issue on the repository, please provide as much info as possible:   Sublime Text build.  Operating system.  Errors in console.  Detailed description of the problem.  Examples for reproducing the error.  You can post pictures, but if specific text or code is required to reproduce the issue, please provide the text in a plain text format for easy copy/paste.   The more info provided, the greater the chance someone will take the time to answer, implement, or fix the issue.    Be prepared to answer questions and provide additional information if required.  Issues in which the creator refuses to respond to follow up questions will be marked as stale and closed.", 
            "title": "Bug Reports"
        }, 
        {
            "location": "/contributing/#reviewing-code", 
            "text": "Take part in reviewing pull requests and/or reviewing direct commits.  Make suggestions to improve the code and discuss solutions to overcome weakness in the algorithm.", 
            "title": "Reviewing Code"
        }, 
        {
            "location": "/contributing/#pull-requests", 
            "text": "Pull requests are welcome, and if you plan on contributing directly to the code, there are a couple of things to be mindful of.  Continuous integration tests on are run on all pull requests and commits via Travis CI.  When making a pull request, the tests will automatically be run, and the request must pass to be accepted.  You can (and should) run these tests before pull requesting.  If it is not possible to run these tests locally, they will be run when the pull request is made, but it is strongly suggested that requesters make an effort to verify before requesting to allow for a quick, smooth merge.  Feel free to use a virtual environment if you are concerned about installing any of the Python packages.  In the future, I may use tox, but as I currently only test on Python 3.3, I wanted to keep things simple.  Running Validation Tests   Tip  If you are running Sublime on a OSX or Linux/Unix system, you run all tests by by running the shell script (assuming you have installed your environment fulfills all requirements below):  chmod +x run_tests.sh\n./run_tests.sh   There are a couple of dependencies that must be present before running the tests.    As  ST3  is the only current, actively supported version, Python 3.3 must be used to validate the tests.    Unit tests are run with  nose .  You can install nose via:  pip install nose  The tests should be run from the root folder of the plugin by using the following command:  nosetests .    Linting is performed on the entire project with  flake8 ,  flake8_docstrings , and  pep8-naming .  These can be installed via:  pip install flake8\npip install flake8_docstrings\npip install pep8-naming  Linting is performed with the following command:  flake8 .", 
            "title": "Pull Requests"
        }, 
        {
            "location": "/contributing/#documentation-improvements", 
            "text": "A ton of time has been spent not only creating and supporting this plugin, but also spent making this documentation.  If you feel it is still lacking, show your appreciation for the plugin by helping to improve the documentation.  Help with documentation is always appreciated and can be done via pull requests.  There shouldn t be any need to run validation tests if only updating documentation.  You don t have to render the docs locally before pull requesting, but if you wish to, I currently use a combination of  mkdocs  with my own custom Python Markdown  extensions  to render the docs.  You can preview the docs if you install these two packages.  The command for previewing the docs is  mkdocs serve  from the root directory.", 
            "title": "Documentation Improvements"
        }, 
        {
            "location": "/license/", 
            "text": "License\n\n\n\n\nColorHelper is released under the MIT license.\n\n\nCopyright \n 2015 Isaac Muse \n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \nSoftware\n), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \nAS IS\n, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE", 
            "title": "License"
        }, 
        {
            "location": "/license/#license", 
            "text": "ColorHelper is released under the MIT license.  Copyright   2015 Isaac Muse   Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the  Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED  AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE", 
            "title": "License"
        }
    ]
}